{"version":3,"sources":["components/theme.js","components/text.js","components/layout.js","components/card.js","routes/underConstruction.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","props","theme","colors","bodyBackground","gutter","maxWidth","breakpoints","sm","md","lg","fonts","body","heading","primary","secondary","Theme","children","Title","type","rest","Tag","styled","Body","light","p","div","fullwidth","Card","Center","StyledCard","UnderConstruction","style","fontSize","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAGA,IAAMA,EAAcC,YAAH,KAIO,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,kBAIhDF,EAAQ,CAEZG,OAAQ,EACRC,SAAU,IACVC,YAAa,CACXC,GAAI,IACJC,GAAI,IACJC,GAAI,MAINC,MAAO,CACLC,KAAK,sBACLC,QAAQ,uBAIVV,OAAQ,CACNW,QAAS,MACTC,UAAW,QACXX,eAAgB,SAaLY,EATD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,oCACE,kBAAC,IAAD,CAAef,MAAOA,GACpB,kBAACH,EAAD,MACCkB,K,uPCpCA,IAAMC,EAAQ,SAAC,GAAiC,IAA/BD,EAA8B,EAA9BA,SAAUE,EAAoB,EAApBA,KAASC,EAAW,mCAC9CC,EAAMC,YAAOH,EAAPG,CAAH,KACQ,SAACrB,GAAD,OAAWA,EAAMC,MAAMS,MAAME,WAE9C,OAAO,kBAACQ,EAAQD,EAAOH,IAGZM,EAAO,SAAC,GAAkC,IAAhCN,EAA+B,EAA/BA,SAAUO,EAAqB,EAArBA,MAAUJ,EAAW,oCAC9CC,EAAMC,IAAOG,EAAV,IAEID,EAAQ,GAAM,GACV,SAACvB,GAAD,OAAWA,EAAMC,MAAMS,MAAMC,QAE9C,OAAO,kBAACS,EAAQD,EAAOH,I,sMCbLK,IAAOI,IAAV,KAEF,SAACzB,GAAD,OACXA,EAAM0B,UAAY,OAAlB,UAA8B1B,EAAMC,MAAMI,SAA1C,SAGegB,IAAOI,IAAV,KACJ,SAACzB,GAAD,OAAWA,EAAMC,MAAMG,U,4LCRnC,IAOeuB,EAPFN,IAAOI,IAAV,K,mVCIV,IAAMG,EAASP,IAAOI,IAAV,KAONI,EAAaR,YAAOM,EAAPN,CAAH,KAoBDS,EAZW,WACxB,OACE,kBAACF,EAAD,KACE,kBAACC,EAAD,KACE,yBAAKE,MAAO,CAAEC,SAAU,KAAxB,gBACA,kBAAC,EAAD,CAAOd,KAAK,MAAZ,yBACA,kBAAC,EAAD,iCCJOe,MAdf,WACE,OACE,kBAAC,EAAD,OCLJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.7b82e02a.chunk.js","sourcesContent":["import React from \"react\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background-color: ${(props) => props.theme.colors.bodyBackground};\n  }\n`;\n\nconst theme = {\n  // Layout\n  gutter: 5,\n  maxWidth: 950,\n  breakpoints: {\n    sm: 768,\n    md: 992,\n    lg: 1200,\n  },\n\n  // Text\n  fonts: {\n    body: `'Rubik', sans-serif`,\n    heading: `'Rubik', sans-serif`,\n  },\n\n  // Colors\n  colors: {\n    primary: \"red\",\n    secondary: \"green\",\n    bodyBackground: \"#fff\",\n  },\n};\n\nconst Theme = ({ children }) => (\n  <>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      {children}\n    </ThemeProvider>\n  </>\n);\n\nexport default Theme;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Title = ({ children, type, ...rest }) => {\n  const Tag = styled(type)`\n    font-family: ${(props) => props.theme.fonts.heading};\n  `;\n  return <Tag {...rest}>{children}</Tag>;\n};\n\nexport const Body = ({ children, light, ...rest }) => {\n  const Tag = styled.p`\n    margin: 0;\n    opacity: ${light ? 0.5 : 1};\n    font-family: ${(props) => props.theme.fonts.body};\n  `;\n  return <Tag {...rest}>{children}</Tag>;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Grid = styled.div`\n  margin: 0 auto;\n  max-width: ${(props) =>\n    props.fullwidth ? \"100%\" : `${props.theme.maxWidth}px`};\n`;\n\nexport const Row = styled.div`\n  margin: ${(props) => props.theme.gutter}px;\n`;\n\nexport const Col = ({ children, ...rest }) => {\n  function getWidthString(span) {\n    if (!span) return;\n    const width = (span / 12) * 100;\n    return `width: ${width}%;`;\n  }\n\n  const ColumnStyle = styled.div`\n    float: left;\n    ${({ xs }) => (xs ? getWidthString(xs) : \"width: 100%;\")}\n\n    @media only screen and (min-width: ${(props) =>\n      `${props.theme.breakpoints.sm}px`}) {\n      ${({ sm }) => sm && getWidthString(sm)};\n    }\n    @media only screen and (min-width: ${(props) =>\n      `${props.theme.breakpoints.md}px`}) {\n      ${({ md }) => md && getWidthString(md)};\n    }\n    @media only screen and (min-width: ${(props) =>\n      `${props.theme.breakpoints.lg}px`}) {\n      ${({ lg }) => lg && getWidthString(lg)};\n    }\n  `;\n\n  const Gutter = styled.div`\n    margin: ${(props) => props.theme.gutter}px;\n  `;\n\n  return (\n    <ColumnStyle {...rest}>\n      <Gutter>{children}</Gutter>\n    </ColumnStyle>\n  );\n};\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  padding: 15px;\n  border-radius: 5px;\n  background-color: white;\n  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.1);\n`;\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Card from \"components/card\";\nimport { Title, Body } from \"components/text\";\n\nconst Center = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledCard = styled(Card)`\n  margin: 25px;\n  display: flex;\n  padding: 35px 50px;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst UnderConstruction = () => {\n  return (\n    <Center>\n      <StyledCard>\n        <div style={{ fontSize: 50 }}>ðŸš§</div>\n        <Title type=\"h1\">Under construction...</Title>\n        <Body>DylanCarver.github.io</Body>\n      </StyledCard>\n    </Center>\n  );\n};\n\nexport default UnderConstruction;\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"routes/home\";\nimport UnderConstruction from \"routes/underConstruction\";\n\nconst inProgress = true;\n\nfunction App() {\n  return inProgress ? (\n    <UnderConstruction />\n  ) : (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Theme from \"components/theme\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Theme>\n      <App />\n    </Theme>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}