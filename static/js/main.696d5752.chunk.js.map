{"version":3,"sources":["components/theme.js","components/text.js","components/layout.js","modules/nav.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","props","theme","colors","bodyBackground","gutter","maxWidth","breakpoints","sm","md","lg","fonts","body","heading","primary","secondary","Theme","children","Title","type","rest","Tag","styled","div","fullwidth","ul","Center","inProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVAGA,IAAMA,EAAcC,YAAH,KAIO,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,kBAIhDF,EAAQ,CAEZG,OAAQ,EACRC,SAAU,IACVC,YAAa,CACXC,GAAI,IACJC,GAAI,IACJC,GAAI,MAINC,MAAO,CACLC,KAAK,sBACLC,QAAQ,uBAIVV,OAAQ,CACNW,QAAS,MACTC,UAAW,QACXX,eAAgB,SAaLY,EATD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,oCACE,kBAAC,IAAD,CAAef,MAAOA,GACpB,kBAACH,EAAD,MACCkB,K,uGCpCA,IAAMC,EAAQ,SAAC,GAAiC,IAA/BD,EAA8B,EAA9BA,SAAUE,EAAoB,EAApBA,KAASC,EAAW,mCAC9CC,EAAMC,YAAOH,EAAPG,CAAH,KACQ,SAACrB,GAAD,OAAWA,EAAMC,MAAMS,MAAME,WAE9C,OAAO,kBAACQ,EAAQD,EAAOH,I,iNCJLK,IAAOC,IAAV,KAEF,SAACtB,GAAD,OACXA,EAAMuB,UAAY,OAAlB,UAA8BvB,EAAMC,MAAMI,SAA1C,SAGegB,IAAOC,IAAV,KACJ,SAACtB,GAAD,OAAWA,EAAMC,MAAMG,U,+MCHxBiB,IAAOG,GAAV,K,+JCER,IAEMC,EAASJ,IAAOC,IAAV,KAoBZ,IASeI,EATU,WACvB,OACE,kBAACD,EAAD,KACG,IACD,kBAAC,EAAD,CAAOP,KAAK,MAAZ,wBC7BNS,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.696d5752.chunk.js","sourcesContent":["import React from \"react\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background-color: ${(props) => props.theme.colors.bodyBackground};\n  }\n`;\n\nconst theme = {\n  // Layout\n  gutter: 5,\n  maxWidth: 950,\n  breakpoints: {\n    sm: 768,\n    md: 992,\n    lg: 1200,\n  },\n\n  // Text\n  fonts: {\n    body: `'Rubik', sans-serif`,\n    heading: `'Rubik', sans-serif`,\n  },\n\n  // Colors\n  colors: {\n    primary: \"red\",\n    secondary: \"green\",\n    bodyBackground: \"#fff\",\n  },\n};\n\nconst Theme = ({ children }) => (\n  <>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      {children}\n    </ThemeProvider>\n  </>\n);\n\nexport default Theme;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Title = ({ children, type, ...rest }) => {\n  const Tag = styled(type)`\n    font-family: ${(props) => props.theme.fonts.heading};\n  `;\n  return <Tag {...rest}>{children}</Tag>;\n};\n\nexport const Body = ({ children, ...rest }) => {\n  const Tag = styled.p`\n    margin: 0;\n    font-family: ${(props) => props.theme.fonts.body};\n  `;\n  return <Tag {...rest}>{children}</Tag>;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Grid = styled.div`\n  margin: 0 auto;\n  max-width: ${(props) =>\n    props.fullwidth ? \"100%\" : `${props.theme.maxWidth}px`};\n`;\n\nexport const Row = styled.div`\n  margin: ${(props) => props.theme.gutter}px;\n`;\n\nexport const Col = ({ children, ...rest }) => {\n  function getWidthString(span) {\n    if (!span) return;\n    const width = (span / 12) * 100;\n    return `width: ${width}%;`;\n  }\n\n  const ColumnStyle = styled.div`\n    float: left;\n    ${({ xs }) => (xs ? getWidthString(xs) : \"width: 100%;\")}\n\n    @media only screen and (min-width: ${(props) =>\n      `${props.theme.breakpoints.sm}px`}) {\n      ${({ sm }) => sm && getWidthString(sm)};\n    }\n    @media only screen and (min-width: ${(props) =>\n      `${props.theme.breakpoints.md}px`}) {\n      ${({ md }) => md && getWidthString(md)};\n    }\n    @media only screen and (min-width: ${(props) =>\n      `${props.theme.breakpoints.lg}px`}) {\n      ${({ lg }) => lg && getWidthString(lg)};\n    }\n  `;\n\n  const Gutter = styled.div`\n    margin: ${(props) => props.theme.gutter}px;\n  `;\n\n  return (\n    <ColumnStyle {...rest}>\n      <Gutter>{children}</Gutter>\n    </ColumnStyle>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport { Body } from \"components/text\";\nimport { Grid, Row, Col } from \"components/layout\";\n\nconst Ul = styled.ul`\n  padding: 0;\n  display: flex;\n  list-style: none;\n\n  a {\n    text-decoration: none;\n  }\n\n  li {\n    margin-right: 15px;\n  }\n`;\n\nconst Nav = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Ul>\n          <li>\n            <Link to=\"/\">\n              <Body>Home</Body>\n            </Link>\n          </li>\n        </Ul>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default Nav;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Title } from \"components/text\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Nav from \"modules/nav\";\nimport Home from \"routes/home\";\n\nconst inProgress = true;\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      {/* <Nav /> */}\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nconst constructionPage = () => {\n  return (\n    <Center>\n      {\" \"}\n      <Title type=\"h1\">Under construction</Title>\n    </Center>\n  );\n};\n\nexport default inProgress ? constructionPage : App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Theme from \"components/theme\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Theme>\n      <App />\n    </Theme>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}